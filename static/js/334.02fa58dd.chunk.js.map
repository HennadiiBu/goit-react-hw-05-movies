{"version":3,"file":"static/js/334.02fa58dd.chunk.js","mappings":"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","sources":["Api/Api.jsx","components/Genres/Genres.jsx","pages/MoviesDatailesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst key = 'bb7e126d2686992af4848a036ba19fca';\nconst mediaType = 'movie';\nconst timeWindow = 'day';\n\nconst BASE_URL_IMAGE = () => {\n  return 'https://image.tmdb.org/t/p/w500';\n};\n\nconst fetchTrendingDayMovie = async () => {\n  try {\n    const responce = await axios(\n      `${BASE_URL}trending/${mediaType}/${timeWindow}?api_key=${key}`\n    );\n    return responce.data;\n  } catch (message) {\n    return console.log(message);\n  }\n};\n\nconst fetchSearchQueryMovie = async query => {\n  try {\n    const responce = await axios(\n      `${BASE_URL}search/movie?query=${query}&api_key=${key}`\n    );\n    return responce.data;\n  } catch (message) {\n    return console.log(message);\n  }\n};\n\nconst fetchDetailsMovie = async id => {\n  try {\n    const responce = await axios(\n      `${BASE_URL}movie/${id}?api_key=${key}`\n    );\n    return responce.data;\n  } catch (message) {\n    return console.log(message);\n  }\n};\n\nconst fetchCreditsMovie = async id => {\n  try {\n    const responce = await axios(\n      `${BASE_URL}movie/${id}/credits?api_key=${key}`\n    );\n    return responce.data;\n  } catch (message) {\n    return console.log(message);\n  }\n};\n\nconst fetchReviewsMovie = async id => {\n  try {\n    const responce = await axios(\n      `${BASE_URL}movie/${id}/reviews?api_key=${key}`\n    );\n    return responce.data;\n  } catch (message) {\n    return console.log(message);\n  }\n};\n\nconst apiTheMovieDB = {\n  fetchTrendingDayMovie,\n  fetchSearchQueryMovie,\n  fetchDetailsMovie,\n  fetchCreditsMovie,\n  fetchReviewsMovie,\n  BASE_URL_IMAGE,\n};\n\nexport default apiTheMovieDB;\n","import React from 'react';\n\nfunction Genres({ data }) {\n  return (\n    <>\n      {data &&\n        data.map(elem => (\n          <span key={elem.id} style={{ marginRight: '10px' }}>\n            {elem.name}\n          </span>\n        ))}\n    </>\n  );\n}\n\nexport default Genres;\n","import apiTheMovieDB from 'Api/Api';\nimport Genres from 'components/Genres/Genres';\nimport React, { Suspense, useEffect, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\n\nfunction MoviesDatailesPage() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [movie, setMovie] = useState(null);\n\n  const locationFrom = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    apiTheMovieDB\n      .fetchDetailsMovie(movieId)\n      .then(setMovie)\n      .catch(err => {\n        console.log(err);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      <Link\n        to={locationFrom}\n        style={{ display: 'inline-block', padding: '15px' }}\n      >\n        Go back\n      </Link>\n      {movie && (\n        <section>\n          <div>\n            <div\n              style={{\n                display: 'flex',\n                gap: '10px',\n              }}\n            >\n              <div style={{ padding_left: '10px' }}>\n                <img\n                  src={\n                    movie.poster_path\n                      ? `${apiTheMovieDB.BASE_URL_IMAGE()}${movie.poster_path}`\n                      : `https://www.publicdomainpictures.net/pictures/280000/velka/not-found-image-15383864787lu.jpg`\n                  }\n                  alt={`poster for the movie ${movie.title}`}\n                  style={{\n                    maxWidth: '350px',\n                  }}\n                />\n              </div>\n              <div>\n                <h2>{movie.title}</h2>\n                <div>\n                  <p>User score:</p>\n                  <p>{movie.popularity}%</p>\n                </div>\n\n                <div>\n                  <h3>Overview</h3>\n                  <p>{movie.overview}</p>\n                </div>\n\n                <h3>Genres</h3>\n                <Genres data={movie.genres} />\n              </div>\n            </div>\n            <div style={{ border: '1px solid' }}>\n              <div>Additional information </div>\n              <ul>\n                <li>\n                  <NavLink to=\"cast\">Cast</NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"review\">Reviews</NavLink>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </section>\n      )}\n    </>\n  );\n}\n\nexport default MoviesDatailesPage;\n"],"names":["BASE_URL","key","fetchTrendingDayMovie","axios","responce","data","console","log","fetchSearchQueryMovie","query","fetchDetailsMovie","id","fetchCreditsMovie","fetchReviewsMovie","apiTheMovieDB","BASE_URL_IMAGE","map","elem","style","marginRight","name","movieId","useParams","location","useLocation","useState","movie","setMovie","locationFrom","state","from","useEffect","then","catch","err","to","display","padding","gap","padding_left","src","poster_path","alt","title","maxWidth","popularity","overview","genres","border","Suspense","fallback"],"sourceRoot":""}